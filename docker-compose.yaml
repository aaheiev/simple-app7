---
version:                        "3.8"
volumes:
  postgres-data:                {}
  pgadmin-data:                 {}

secrets:
  db_pass:
    file:                       secrets/db.pass

services:

  postgres:
    image:                      postgres:14-alpine
    environment:
      POSTGRES_USER:            simple_app7
      POSTGRES_PASSWORD_FILE:   /run/secrets/db_pass
      POSTGRES_DB:              simple_app7
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    secrets:
      - db_pass
    healthcheck:
      test:                     [ "CMD", "pg_isready", "-U", "simple_app7" ]
      interval:                 5s
      timeout:                  5s
      retries:                  5
    restart:                    unless-stopped

  pgadmin:
    depends_on:
      - postgres
    image:                      dpage/pgadmin4
    environment:
      PGADMIN_LISTEN_PORT:      5050
      PGADMIN_DISABLE_POSTFIX:  1
      GUNICORN_THREADS:         2
      PGADMIN_DEFAULT_EMAIL:    admin@pgadmin.local
      PGADMIN_DEFAULT_PASSWORD: uZ4a-o1ae-zae-M4ri2
    ports:
      - 5050:5050
    volumes:
      - pgadmin-data:/var/lib/pgadmin
      - ./pgadmin4.json:/pgadmin4/servers.json
    healthcheck:
      test:                     [ "CMD", "curl", "-f", "http://127.0.0.1:5050/login" ]
      interval:                 10s
      timeout:                  15s
      retries:                  10
    restart:                    unless-stopped

#  app:
#    image:                    sample_app:latest
#  #    stdin_open:               true
#  #    tty:                      true
#    depends_on:
#      - postgres
#      - redis
#    environment:
#      DB_NAME:                sample_app
#      DB_USER:                sample_app
#      DB_HOST:                postgres
#      DB_PASS_FILE:           /run/secrets/db_pass
#    secrets:
#      - db_pass
#    volumes:
#      - .:/app
#    ports:
#      - 3000:3000
#    healthcheck:
#      test:                   [ "CMD", "curl", "-f", "http://127.0.0.1:3000/health" ]
#      interval:               5s
#      timeout:                5s
#      retries:                5
#    restart:                  unless-stopped
#
#  redis:
#    image:                    redis:6-alpine
#    ports:
#      - 6379:6379
#    healthcheck:
#      test:                   [ "CMD", "redis-cli", "ping" ]
#      interval:               5s
#      timeout:                30s
#      retries:                50
#    restart:                  unless-stopped
#
#  mailcatcher:
#    image:                    schickling/mailcatcher
#    ports:
#      - 1025:1025
#      - 1080:1080
